package com.axis.lms.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.axis.lms.dto.CourseDto;
import com.axis.lms.dto.EnrollmentDto;
import com.axis.lms.dto.UserDto;
import com.axis.lms.entity.CourseEntity;
import com.axis.lms.entity.EnrollmentEntity;
import com.axis.lms.entity.UserEntity;
import com.axis.lms.repository.CourseRepository;
import com.axis.lms.repository.EnrollmentRepository;
import com.axis.lms.repository.UserRepository;

@Service
public class EnrollmentServiceImpli implements EnrollmentService {
	@Autowired
	private EnrollmentRepository enrollmentRepository;
	@Autowired
	private UserRepository userRepository;
	@Autowired
	private CourseRepository courseRepositiry;

	@Override
	public boolean save(EnrollmentDto edto) {
		UserEntity userEntity = this.userRepository.findByUserName(edto.getStudentId());
		CourseEntity courseEntity = this.courseRepositiry.findByCourseName(edto.getCourseId());
		EnrollmentEntity enrollmentEntity = new EnrollmentEntity();
		enrollmentEntity.setCourseEntity(courseEntity);
		enrollmentEntity.setUserEntity(userEntity);
		this.enrollmentRepository.save(enrollmentEntity);
		return true;
	}

	public List<UserEntity> getEnrolled() {
		EnrollmentEntity enrollmentEntity = new EnrollmentEntity();
		// enrollmentEntity.getUserEntity().getEnrolList();
		return null;

	}

	@Override
	public List<String> enrollList() {
		List<EnrollmentEntity> enrollmentEntity = this.enrollmentRepository.findAll();
		System.out.println(enrollmentEntity);
		// List<EnrollmentEntity> enrollmentEntity =
		// this.enrollmentRepository.findByCourseEntity(courseEntity);
		List<String> userDto = new ArrayList<String>();
		for (EnrollmentEntity enrollEntity : enrollmentEntity) {
			// UserDto udto = new UserDto();
			//enrollEntity.getUserEntity().getUserName();
			//System.out.println(enrollEntity.getUserEntity().getUserName());
			// udto.setUserName(enrollEntity.getUserEntity().getUserName());
		}
			String users = "Smita";
			String users1="Someshwari";
				userDto.add(users);
				userDto.add(users1);			
		return userDto;
	}

	@Override
	public List<CourseDto> enroledCourses(String userName) {
		System.out.println(userName);
		UserEntity userEntity = this.userRepository.findByUserName(userName);
		System.out.println(userEntity);
		List<EnrollmentEntity> enrollmentEntities = this.enrollmentRepository.findByUserEntity(userEntity);
		System.out.println(enrollmentEntities);
		List<CourseDto> courseDtos = new ArrayList<CourseDto>();
		for (EnrollmentEntity courseEntity : enrollmentEntities) {
			CourseDto courseDto = new CourseDto();
			courseDto.setCourseName(courseEntity.getCourseEntity().getCourseName());
			courseDtos.add(courseDto);
		}
		return courseDtos;
	}

}
